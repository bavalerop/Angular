***********************Error @angular-devkit/build-angular*******************
npm install --save-dev @angular-devkit/build-angular
***********************Instalacion de angular****************
Primero instalar node.js
abrir cmd
--npm install -g @angular/cli
--Ingresar a carpeta de proyectos
--ng new my-dream-app
--cd my-dream-app
--ng serve
*********************Clases********************************************
class Auto {
	marca:string="ferrari";
	ruedas:number=2;
	
	constructor(marca:string, ruedas:number){//Para instanciar variables
		this.marca = marca;
		this.ruedas = ruedas;
	}

}

let carro:Auto = new Auto();
*********************Interfaces****************************************
interface Carro {
    nombre:string,
    ruedas:number
}

function mostrar(chuchu:Carro){
    console.log("Hola carrito: "+chuchu.nombre);
}
*********************Promesas******************************************
let prom1 = new Promise( (resolve, reject) => { 
    setTimeout(()=>{
        console.log("Promesa terminada");
        //termina bien 
        resolve();
        //termina mal

    }, 1500);
})

prom1.then(()=>{
    console.log("Ejecutarme cuando se ejecute bien");
}, () => {
    console.log("Ejecutarme cuando pasa algo mal");
})
**********Destructuracion de arreglos y objetos************************
let avenger = {
    nombre : "steve",
    poder: "droga"
}
let {nombre, poder} = avenger;
let avengers:string[] = ["Thor", "Steve", "Tony"];
let [loki, capi, ironman] = avengers;
console.log(loki,capi,ironman);
************Funciones de flecha************************************
let mifuncion = function (a:number, b:number){
    return a+b;
}

let mifuncionCorta = (a:number, b:number) => a+b;
let Saludar = () => "Hola como estas";

let mifuncionCorta2 = (nombre:string) => {
    nombre = nombre.toUpperCase();
    return nombre;
}
************Funciones con parametros Opcionales********************
function buenas(quien:nombre,objeto:string="caja",momento?:string)
************Template literal***************************************
let texto = `Hola,  ${nombre} ${apellido}`; (permite salto de linea)
let texto = `Hola,  ${1 + 2} ${apellido}`;
let texto = `Hola,  ${getNombre()} ${apellido}`; (Uso de funciones)
************Tipos de variables***************************************
let, var 
let nombre:string = "buenas";
let num:number = 12345;
let bol:boolean = true;

let hoy:Date =  new Date('2020-10-21');

let carro = {
    ruedas: 2,
    marca: "ferrari"
}
************TypeScript***************************************
poner en modo escucha un archivo ts para ver errores:
tsc archivo.ts -w
para inicializar el proyecto:
tsc -init
tsc
(se genera el compilado de los archivos y la muestra de errores) 
************Visual Studio Code*******************************

Plugins recomendados para Visual Studio Code:
=============================================

• Angular 2 TypeScript Emmet
• Angular 7 Snippets – TypeScript, Html, Angular Material...
• Angular Language Service
• Angular v7 Snippets
• Angular2-inline
• Bootstrap 4 & Font Awesome snippets
• HTML CSS Support
• JavaScript (ES6) code snippets
• JS-CSS-HTML Formatter
• JSHint
• Material Icon Theme
• Prettier – Code Formatter
• Terminal
• TSLint
• TypeScript Hero
• TypeScript Importer
*****************************************************************
***********Error de Instalacion de angular****************
Actualizar node
y actualizar cli
abrir cmd
--rm -rf carpeta proyecto
--npm unistall -g angular-cli
--npm unistall -g @angular/cli
--npm cache clean
--npm install -g @angular/cli@latest
--Volver al paso de instalacion
*********************************************************
*********************Directivas**************************
--ngIf y evento Click
<div *ngIf="variable == true"></div>
<button (click)="funciion(variable)"></div>
--ngFor
*********************************************************
*****************Crear componentes***********************
-- ng g c Components/user --no-spec
El constructor se lanza de primeras (Pero es para instaciar variables)
ngOnInit se lanza despues del constructor (Para instanciar metodos)
*****************Crear Pipes***********************
-- ng g pipes Pipes/paginate --no-spec
*****************Angular material************************
-- ng add @angular/material
*****************Pipe Paginator**************************
-- Crear carpeta donde se almacenan los pipe --> pipe
-- Invocar en el component.ts donde se usara la siguinete linea
import { PageEvent } from '@angular/material/paginator';
crear en la clase del componente las siguientes variables
*public pageSize: number;
*public pageNumber: number;
*public pageSizeOptions: Array<any>;
inicializar en el constructor de la clase:
        this.pageNumber = 1;
        this.pageSize = 2;
en clase crear la funcion:
handlePage(e: PageEvent) {
        this.pageSize = e.pageSize;
        this.pageNumber = e.pageIndex + 1;
    }
en el html del componente invocar de la siguiente manera
<!-- Paginacion -->
        <mat-paginator [length]="Hoteles.length" [pageSize]="pageSize" [pageSizeOptions]="pageSizeOptions" (page)="handlePage($event)" showFirstLastButtons>
        </mat-paginator>
y en el for donde se mostraran los datos usar el pipe 
<tr *ngFor="let hot of Hoteles | paginate:pageSize:pageNumber">
en el app.module instanciar lo siguiente:
import { PaginatePipe } from './Pipes/paginate.pipe';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import {MatPaginatorModule, MatPaginatorIntl} from '@angular/material/paginator';
import { CustomMatPaginatorIntl } from './paginator-es';

import { HotelComponent } from './Components/CrudHotel/hot.component';

@NgModule({
  declarations: [
    AppComponent,
    HotelComponent,
    PaginatePipe
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    BrowserAnimationsModule,
    MatPaginatorModule
  ],
  providers: [{
    provide: MatPaginatorIntl,
    useClass: CustomMatPaginatorIntl
  }],
  bootstrap: [AppComponent]
})
Finalmente copiar el archivo paginate.pipe.ts de otro proyecto junto
con el archivo paginator-es-ts


        this.pageSizeOptions = [2, 5, 10, 25, 100, 'all'];

****************Instalar Bootstrarp**********************
-- npm install bootstrap jquery popper
--Despues ir al archivo angular.json e instanciar
"styles": [
  "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
  "src/styles.css",
  "./node_modules/bootstrap/dist/css/bootstrap.min.css"
],
"scripts": [
  "./node_modules/bootstrap/dist/js/bootstrap.min.js",
  "./node_modules/popper.js/dist/popper.min.js",
  "./node_modules/jquery/dist/jquery.min.js"
]
********************************************************
*****************SweetAlert*****************************
npm install --save sweetalert2 @sweetalert2/ngx-sweetalert2
--import { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';
--imports: [SweetAlert2Module.forRoot()
--<button [swal]="['Oops!', 'This is not implemented yet :/', 'warning']">
  Do it!
</button>
--<swal
  #deleteSwal
  title="Delete {{ file.name }}?"
  text="This cannot be undone"
  type="question"
  [showCancelButton]="true"
  [focusCancel]="true"
  (confirm)="deleteFile(file)">
</swal>
<button [swal]="deleteSwal">prueba borrar</button>
********************************************************
****************NGMODEL********************************
 [(ngModel)]="hote.nit" --> GUARDE Y MUESTRE
 [ngModel]="hote.nit" --> SOLO MUESTRE
 (ngModel)="hote.nit" -->SOLO GUARDE
****************servicios*****************************
--ng g service services/ciudad
****************UPDATE angular*****************************
UPDATE: To update Angular CLI to a new version, you must update both the global package and your project's local package.

Global package:
npm uninstall -g @angular/cli
npm cache verify // If npm version is < 5 then use `npm cache clean`
npm install -g @angular/cli@latest
Local project package:
// Use rmdir /S/Q node_modules dist in Windows Command Prompt; 
// Use rm -r -fo node_modules, dist in Windows PowerShell

rm -rf node_modules dist 
npm install --save-dev @angular/cli@latest
npm install
----Para actualizar a 9****
ng update
using Node 10.13 or later. se busca con ng version
ng update @angular/core@8 @angular/cli@8 --allow-dirty
ng update @angular/core @angular/cli --allow-dirty
TypeScript 3.7
ng update
ng add @angular/localize